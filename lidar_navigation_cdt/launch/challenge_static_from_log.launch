<launch>

  <!-- Launch the grid map filters demo node. -->
  <node pkg="lidar_navigation_cdt" type="lidar_navigation_node" name="lidar_navigation_node" output="screen">
    <!-- Input topic -->
    <param name="input_topic" value="/elevation_mapping/elevation_map" />
    <!-- Output topic -->
    <param name="output_topic" value="filtered_map" />
    <!-- Demo mode or online -->
    <param name="demo_mode" value="true" />
    <!-- Load grid map filter chain configuration -->
    <rosparam command="load" file="$(find lidar_navigation_cdt)/config/filters_demo_filter_chain.yaml" />
  </node>

  <!-- Load the general parameters (except for filter chain) for this demo. -->
  <rosparam command="load" file="$(find lidar_navigation_cdt)/config/filters_demo.yaml" />

  <!-- Launch the grid map loader demo node -->
  <node pkg="grid_map_loader" type="grid_map_loader" name="grid_map_loader_demo" output="screen">
    <!-- Path to the bag file. -->
    <param name="file_path" value="$(find lidar_navigation_cdt)/data/cdt_gridmap_2cm_grid.bag" />
    <!-- Topic under which grid map is saved in bag file. -->
    <param name="bag_topic" value="/elevation_mapping/elevation_map" />
    <!-- Topic under which grid map should be published. If not set, same as above.-->
    <param name="publish_topic" value="/elevation_mapping/elevation_map" />
    <!-- For how long the node should be kept alive. -->
    <param name="duration" value="40.0" />
  </node>

  <!-- Launch the grid map visualizer -->
  <node pkg="grid_map_visualization" type="grid_map_visualization" name="grid_map_visualization" output="screen">
    <rosparam command="load" file="$(find lidar_navigation_cdt)/config/grid_map_loader_demo.yaml" />
  </node>

</launch>
